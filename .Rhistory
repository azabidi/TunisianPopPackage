#' Tunisian population
#'
#' Takes a governorate and gives the population
#' @param  x
#' @return the square of the input
library(readxl)
library(readxl)
poprg <- read_excel("files/pop per region-Tunisie.xlsx")
View(poprg)
poprg[,1]
View(poprg)
pop <-function(x){
poprg <- read_excel("files/pop per region-Tunisie.xlsx")
for (i in 1: length(poprg)){
if x==poprg[i,1]{ return(poprg[i,2]) }
else message("Governorate not Found!")
}
}
library(readxl)
#' Tunisian population
#'
#' Takes a governorate and gives the population
#' @param  x
#' @return the number of population for the specified governorate
library(readxl)
pop <-function(x){
poprg <- read_excel("files/pop per region-Tunisie.xlsx")
for (i in 1: length(poprg)){
if x==poprg[i,1]{ return(poprg[i,2]) }
else {return(message("Governorate not Found!"))}
}
}
library(readxl)
#' Tunisian population
#'
#' Takes a governorate and gives the population
#' @param  x
#' @return the number of population for the specified governorate
library(readxl)
pop <-function(x){
poprg <- read_excel("files/pop per region-Tunisie.xlsx")
for (i in 1: length(poprg)){
if (x==poprg[i,1])
return(poprg[i,2])
else
return(message("Governorate not Found!"))
}
}
pop("Gouvernorat de Tunis")
pop("Gouvernorat de Tunis")
pop("hjkk")
library(readxl)
#' Tunisian population
#'
#' Takes a governorate and gives the population
#' @param  x
#' @return the number of population for the specified governorate
library(readxl)
pop <-function(x){
poprg <- read_excel("files/pop per region-Tunisie.xlsx")
for (i in 1: length(poprg)){
if (x=poprg[i,1])
return(poprg[i,2])
else
return(message("Governorate not Found!"))
}
}
library(readxl)
#' Tunisian population
#'
#' Takes a governorate and gives the population
#' @param  x
#' @return the number of population for the specified governorate
library(readxl)
pop <-function(x){
poprg <- read_excel("files/pop per region-Tunisie.xlsx")
for (i in 1: length(poprg)){
if (x==poprg[i,1])
return(poprg[i,2])
else
return(message("Governorate not Found!"))
}
}
library(readxl)
#' Tunisian population
#'
#' Takes a governorate and gives the population
#' @return the number of population for the specified governorate
library(readxl)
pop <-function(x){
poprg <- read_excel("files/pop per region-Tunisie.xlsx")
for (i in 1: length(poprg)){
if (x==poprg[i,1])
return(poprg[i,2])
else
return(message("Governorate not Found!"))
}
}
pop("Gouvernorat de Tunis")
y="Gouvernorat de "
ch=paste(y,x,sep = " ")
library(readxl)
#' Tunisian population
#'
#' Takes a governorate and gives the population
#' @param  x
#' @return the number of population for the specified governorate
library(readxl)
y="Gouvernorat de "
pop <-function(x){
ch=paste(y,x,sep = " ")
poprg <- read_excel("files/pop per region-Tunisie.xlsx")
for (i in 1: length(poprg)){
if (ch==poprg[i,1])
return(poprg[i,2])
else
return(message("Governorate not Found!"))
}
}
pop("Tunis")
library(readxl)
#' Tunisian population
#'
#' Takes a governorate and gives the population
#' @param  x
#' @return the number of population for the specified governorate
library(readxl)
y="Gouvernorat de"
pop <-function(x){
ch=paste(y,x,sep = " ")
poprg <- read_excel("files/pop per region-Tunisie.xlsx")
for (i in 1: length(poprg)){
if (ch==poprg[i,1])
return(poprg[i,2])
else
return(message("Governorate not Found!"))
}
}
pop("Tunis")
pop("Manouba")
pop("Tunis")
pop("Manouba")
pop("Nabeul")
paste(y,"Manouba",sep = " ")
paste(y,"Manouba",sep = "")
poprg[,1]
library(readxl)
#' Tunisian population
#'
#' Takes a governorate and gives the population
#' @param  x
#' @return the number of population for the specified governorate
library(readxl)
y="Gouvernorat de"
pop <-function(x){
ch=paste(y,x,sep = " ")
poprg <- read_excel("files/pop per region-Tunisie.xlsx")
for (i in 1: length(poprg)){
if (ch==poprg[i,1])
return(poprg[i,2])
else
return(message("Governorate not Found!"))
}
}
pop("Tunis")
pop("Nabeul")
library(readxl)
#' Tunisian population
#'
#' Takes a governorate and gives the population
#' @param  x
#' @return the number of population for the specified governorate
library(readxl)
y="Gouvernorat de"
pop <-function(x){
ch=paste(y,x,sep = " ")
poprg <- read_excel("files/pop per region-Tunisie.xlsx")
for (i in 1 : length(poprg)){
if (ch==poprg[i,1])
return(poprg[i,2])
}
return(message("Governorate not Found!"))
}
pop("Tunis")
pop("Nabeul")
length(poprg)
length(poprg[,1])
library(readxl)
#' Tunisian population
#'
#' Takes a governorate and gives the population
#' @param  x
#' @return the number of population for the specified governorate
library(readxl)
y="Gouvernorat de"
pop <-function(x){
ch=paste(y,x,sep = " ")
poprg <- read_excel("files/pop per region-Tunisie.xlsx")
for (i in 1:24){
if (ch==poprg[i,1])
return(poprg[i,2])
}
return(message("Governorate not Found!"))
}
pop("Tunis")
pop("Nabeul")
pop("Nabeu")
nrow(poprg)
library(readxl)
#' Tunisian population
#'
#' Takes a governorate and gives the population
#' @param  x
#' @return the number of population for the specified governorate
library(readxl)
y="Gouvernorat de"
pop <-function(x){
ch=paste(y,x,sep = " ")
poprg <- read_excel("files/pop per region-Tunisie.xlsx")
for (i in 1:nrow(poprg)){
if (ch==poprg[i,1])
return(poprg[i,2])
}
return(message("Governorate not Found!"))
}
pop("Tunis")
pop("Nabeul")
pop("Nabeu")
library(TunisianPop)
install.packages("devtools")
library(devtools)
install()
getwd
getwd()
library(readxl)
#' Tunisian population
#'
#' Takes a governorate and gives the population
#' @param  x
#' @return the number of population for the specified governorate
library(readxl)
y="Gouvernorat de"
pop <-function(x){
ch=paste(y,x,sep = " ")
poprg <- read_excel("pop per region-Tunisie.xlsx")
for (i in 1:nrow(poprg)){
if (ch==poprg[i,1])
return(poprg[i,2])
}
return(message("Governorate not Found!"))
}
pop("Tunis")
pop("Nabeu")
pop("Nabeul")
install()
library(TunisianPop)
library(TunisianPop)
pop("Tunis")
pop("az")
library(TunisianPop)
pop("Tunis")
library(read_excel)
library(readxl)
pop("Tunis")
